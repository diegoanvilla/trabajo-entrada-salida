{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admins\\\\Desktop\\\\Universidad\\\\trabajo-memorias - Copy\\\\src\\\\components\\\\fragmentacionInterna.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useMemoria } from \"./memoryContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FragmentacionInterna() {\n  const salida = [{\n    dispositivo: \"pantalla\",\n    velocidad: \"2KBs\"\n  }, {\n    dispositivo: \"Impresora\",\n    velocidad: \"1 - 5 Kbs\"\n  }]; // const { espacio, setEspacio } = useMemoria();\n  // const kb = useRef();\n  // const [procesos, setProcesos] = useState([]);\n  // const addProcess = (kb) => {\n  //   if (procesos.length === 8 || kb > 1000) return alert(\"No hay espacio\");\n  //   return setProcesos((p) => [...p, { espacio: kb }]);\n  // };\n  // useEffect(() => {\n  //   const espacioContainer = espacio;\n  //   for (let index = 0; index < procesos.length; index++) {\n  //     espacioContainer[index] = {\n  //       ocupado: procesos[index].espacio / 10,\n  //       proceso: `${index + 1}`,\n  //     };\n  //   }\n  //   setEspacio((e) => [...espacioContainer]);\n  // }, [procesos]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo\",\n      children: \"Dispositivos de Salida:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_c = FragmentacionInterna;\nexport default FragmentacionInterna;\n\nvar _c;\n\n$RefreshReg$(_c, \"FragmentacionInterna\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useMemoria","FragmentacionInterna","salida","dispositivo","velocidad"],"sources":["C:/Users/admins/Desktop/Universidad/trabajo-memorias - Copy/src/components/fragmentacionInterna.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { useMemoria } from \"./memoryContext\";\r\nfunction FragmentacionInterna() {\r\n  const salida = [\r\n    { dispositivo: \"pantalla\", velocidad: \"2KBs\" },\r\n    { dispositivo: \"Impresora\", velocidad: \"1 - 5 Kbs\" },\r\n  ];\r\n  // const { espacio, setEspacio } = useMemoria();\r\n  // const kb = useRef();\r\n  // const [procesos, setProcesos] = useState([]);\r\n  // const addProcess = (kb) => {\r\n  //   if (procesos.length === 8 || kb > 1000) return alert(\"No hay espacio\");\r\n  //   return setProcesos((p) => [...p, { espacio: kb }]);\r\n  // };\r\n  // useEffect(() => {\r\n  //   const espacioContainer = espacio;\r\n  //   for (let index = 0; index < procesos.length; index++) {\r\n  //     espacioContainer[index] = {\r\n  //       ocupado: procesos[index].espacio / 10,\r\n  //       proceso: `${index + 1}`,\r\n  //     };\r\n  //   }\r\n  //   setEspacio((e) => [...espacioContainer]);\r\n  // }, [procesos]);\r\n  return (\r\n    <div>\r\n      <h1 className=\"titulo\">Dispositivos de Salida:</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FragmentacionInterna;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;AACA,SAASC,oBAAT,GAAgC;EAC9B,MAAMC,MAAM,GAAG,CACb;IAAEC,WAAW,EAAE,UAAf;IAA2BC,SAAS,EAAE;EAAtC,CADa,EAEb;IAAED,WAAW,EAAE,WAAf;IAA4BC,SAAS,EAAE;EAAvC,CAFa,CAAf,CAD8B,CAK9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,oBACE;IAAA,uBACE;MAAI,SAAS,EAAC,QAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;KA3BQH,oB;AA6BT,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}