{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admins\\\\Desktop\\\\Universidad\\\\trabajo-memorias - Copy\\\\src\\\\components\\\\fragmentacionExterna.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useMemoria } from \"./memoryContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FragmentacionExterna() {\n  _s();\n\n  const {\n    espacio,\n    setEspacio\n  } = useMemoria();\n  const kb = useRef();\n  const [procesos, setProcesos] = useState([]);\n\n  const addProcess = kb => {\n    if (procesos.length === 8 || kb > 8000) return alert(\"No hay espacio\");\n    return setProcesos(p => [...p, {\n      espacio: kb\n    }]);\n  };\n\n  useEffect(() => {\n    if (!procesos.length) return;\n    const espacioContainer = espacio;\n\n    try {\n      let procesoEspacio = procesos[procesos.length - 1].espacio;\n\n      while (procesoEspacio > 0) {\n        for (let y = 0; y < espacio.length; y++) {\n          if (espacio[y].ocupado === 0) {\n            if (procesoEspacio > 1000) {\n              espacioContainer[y] = {\n                ocupado: 100,\n                proceso: `${procesos.length}`\n              };\n              procesoEspacio = procesoEspacio - 1000;\n            } else {\n              espacioContainer[y] = {\n                ocupado: procesoEspacio / 10,\n                proceso: `${procesos.length}`\n              };\n              procesoEspacio = 0;\n              break;\n            }\n          }\n\n          console.log(procesoEspacio > 0);\n\n          if (y === espacio.length - 1 && procesoEspacio > 0) {\n            setProcesos(p => p.filter((item, i) => i !== procesos.length - 1));\n            throw \"No hay espacio\";\n          }\n        }\n      }\n\n      setEspacio(e => [...espacioContainer]);\n    } catch (err) {\n      console.log(procesos);\n      alert(err);\n    }\n  }, [procesos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo\",\n      children: \"Fragmentacion Externa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"titulo\",\n      children: \"A\\xF1adir nuevo proceso\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"\",\n      placeholder: \"espacio de tu proceso en kb\",\n      id: \"\",\n      ref: kb\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addProcess(kb.current.value),\n      children: \"A\\xF1adir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FragmentacionExterna, \"xRr+KtTiGY/3dtNbBXCLN3DGIhU=\", false, function () {\n  return [useMemoria];\n});\n\n_c = FragmentacionExterna;\nexport default FragmentacionExterna;\n\nvar _c;\n\n$RefreshReg$(_c, \"FragmentacionExterna\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useMemoria","FragmentacionExterna","espacio","setEspacio","kb","procesos","setProcesos","addProcess","length","alert","p","espacioContainer","procesoEspacio","y","ocupado","proceso","console","log","filter","item","i","e","err","current","value"],"sources":["C:/Users/admins/Desktop/Universidad/trabajo-memorias - Copy/src/components/fragmentacionExterna.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { useMemoria } from \"./memoryContext\";\r\nfunction FragmentacionExterna() {\r\n  const { espacio, setEspacio } = useMemoria();\r\n  const kb = useRef();\r\n  const [procesos, setProcesos] = useState([]);\r\n  const addProcess = (kb) => {\r\n    if (procesos.length === 8 || kb > 8000) return alert(\"No hay espacio\");\r\n    return setProcesos((p) => [...p, { espacio: kb }]);\r\n  };\r\n  useEffect(() => {\r\n    if (!procesos.length) return;\r\n    const espacioContainer = espacio;\r\n    try {\r\n      let procesoEspacio = procesos[procesos.length - 1].espacio;\r\n      while (procesoEspacio > 0) {\r\n        for (let y = 0; y < espacio.length; y++) {\r\n          if (espacio[y].ocupado === 0) {\r\n            if (procesoEspacio > 1000) {\r\n              espacioContainer[y] = {\r\n                ocupado: 100,\r\n                proceso: `${procesos.length}`,\r\n              };\r\n              procesoEspacio = procesoEspacio - 1000;\r\n            } else {\r\n              espacioContainer[y] = {\r\n                ocupado: procesoEspacio / 10,\r\n                proceso: `${procesos.length}`,\r\n              };\r\n              procesoEspacio = 0;\r\n              break;\r\n            }\r\n          }\r\n          console.log(procesoEspacio > 0);\r\n          if (y === espacio.length - 1 && procesoEspacio > 0) {\r\n            setProcesos((p) =>\r\n              p.filter((item, i) => i !== procesos.length - 1)\r\n            );\r\n            throw \"No hay espacio\";\r\n          }\r\n        }\r\n      }\r\n      setEspacio((e) => [...espacioContainer]);\r\n    } catch (err) {\r\n      console.log(procesos);\r\n      alert(err);\r\n    }\r\n  }, [procesos]);\r\n  return (\r\n    <div>\r\n      <h1 className=\"titulo\">Fragmentacion Externa</h1>\r\n      <h3 className=\"titulo\">Añadir nuevo proceso</h3>\r\n      <input\r\n        type=\"number\"\r\n        name=\"\"\r\n        placeholder=\"espacio de tu proceso en kb\"\r\n        id=\"\"\r\n        ref={kb}\r\n      />\r\n      <button onClick={() => addProcess(kb.current.value)}>Añadir</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FragmentacionExterna;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}