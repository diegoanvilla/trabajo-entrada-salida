{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admins\\\\Desktop\\\\Universidad\\\\trabajo-memorias - Copy\\\\src\\\\components\\\\fragmentacionInterna.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useMemoria } from \"./memoryContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FragmentacionInterna() {\n  _s();\n\n  const salida = [{\n    dispositivo: \"Pantalla\",\n    velocidad: \"2KBs\"\n  }, {\n    dispositivo: \"Impresora\",\n    velocidad: \"1 - 5 Kbs\"\n  }, {\n    dispositivo: \"Linea de comunicaciones\",\n    velocidad: \"30Bps - 20MBps\"\n  }];\n  const {\n    espacio,\n    setEspacio\n  } = useMemoria(); // const kb = useRef();\n\n  const [procesos, setProcesos] = useState([]);\n\n  const addDispositivo = dispositivo => {\n    return setProcesos(p => [...p, { ...dispositivo\n    }]);\n  };\n\n  useEffect(() => {\n    const espacioContainer = espacio;\n\n    for (let index = 0; index < procesos.length; index++) {\n      console.log(procesos);\n      espacioContainer[index] = {\n        ocupado: true,\n        proceso: procesos.velocidad\n      };\n    }\n\n    setEspacio(e => [...espacioContainer]);\n  }, [procesos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo\",\n      children: \"Dispositivos de Salida:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), salida.map(i => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: i.dispositivo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              addDispositivo(i);\n            },\n            children: \"Conectar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FragmentacionInterna, \"WjhZBfFa45zi/6QW9iDXoR2FtlE=\", false, function () {\n  return [useMemoria];\n});\n\n_c = FragmentacionInterna;\nexport default FragmentacionInterna;\n\nvar _c;\n\n$RefreshReg$(_c, \"FragmentacionInterna\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useMemoria","FragmentacionInterna","salida","dispositivo","velocidad","espacio","setEspacio","procesos","setProcesos","addDispositivo","p","espacioContainer","index","length","console","log","ocupado","proceso","e","map","i"],"sources":["C:/Users/admins/Desktop/Universidad/trabajo-memorias - Copy/src/components/fragmentacionInterna.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { useMemoria } from \"./memoryContext\";\r\nfunction FragmentacionInterna() {\r\n  const salida = [\r\n    { dispositivo: \"Pantalla\", velocidad: \"2KBs\" },\r\n    { dispositivo: \"Impresora\", velocidad: \"1 - 5 Kbs\" },\r\n    { dispositivo: \"Linea de comunicaciones\", velocidad: \"30Bps - 20MBps\" },\r\n  ];\r\n  const { espacio, setEspacio } = useMemoria();\r\n  // const kb = useRef();\r\n  const [procesos, setProcesos] = useState([]);\r\n  const addDispositivo = (dispositivo) => {\r\n    return setProcesos((p) => [...p, { ...dispositivo }]);\r\n  };\r\n  useEffect(() => {\r\n    const espacioContainer = espacio;\r\n    for (let index = 0; index < procesos.length; index++) {\r\n      console.log(procesos);\r\n      espacioContainer[index] = {\r\n        ocupado: true,\r\n        proceso: procesos.velocidad,\r\n      };\r\n    }\r\n    setEspacio((e) => [...espacioContainer]);\r\n  }, [procesos]);\r\n  return (\r\n    <div>\r\n      <h1 className=\"titulo\">Dispositivos de Salida:</h1>\r\n      {salida.map((i) => {\r\n        return (\r\n          <>\r\n            <div className=\"element\">\r\n              <h1>{i.dispositivo}</h1>\r\n              <button\r\n                onClick={() => {\r\n                  addDispositivo(i);\r\n                }}\r\n              >\r\n                Conectar\r\n              </button>\r\n            </div>\r\n          </>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FragmentacionInterna;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;;AACA,SAASC,oBAAT,GAAgC;EAAA;;EAC9B,MAAMC,MAAM,GAAG,CACb;IAAEC,WAAW,EAAE,UAAf;IAA2BC,SAAS,EAAE;EAAtC,CADa,EAEb;IAAED,WAAW,EAAE,WAAf;IAA4BC,SAAS,EAAE;EAAvC,CAFa,EAGb;IAAED,WAAW,EAAE,yBAAf;IAA0CC,SAAS,EAAE;EAArD,CAHa,CAAf;EAKA,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAA0BN,UAAU,EAA1C,CAN8B,CAO9B;;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;EACA,MAAMU,cAAc,GAAIN,WAAD,IAAiB;IACtC,OAAOK,WAAW,CAAEE,CAAD,IAAO,CAAC,GAAGA,CAAJ,EAAO,EAAE,GAAGP;IAAL,CAAP,CAAR,CAAlB;EACD,CAFD;;EAGAL,SAAS,CAAC,MAAM;IACd,MAAMa,gBAAgB,GAAGN,OAAzB;;IACA,KAAK,IAAIO,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGL,QAAQ,CAACM,MAArC,EAA6CD,KAAK,EAAlD,EAAsD;MACpDE,OAAO,CAACC,GAAR,CAAYR,QAAZ;MACAI,gBAAgB,CAACC,KAAD,CAAhB,GAA0B;QACxBI,OAAO,EAAE,IADe;QAExBC,OAAO,EAAEV,QAAQ,CAACH;MAFM,CAA1B;IAID;;IACDE,UAAU,CAAEY,CAAD,IAAO,CAAC,GAAGP,gBAAJ,CAAR,CAAV;EACD,CAVQ,EAUN,CAACJ,QAAD,CAVM,CAAT;EAWA,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,QAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGL,MAAM,CAACiB,GAAP,CAAYC,CAAD,IAAO;MACjB,oBACE;QAAA,uBACE;UAAK,SAAS,EAAC,SAAf;UAAA,wBACE;YAAA,UAAKA,CAAC,CAACjB;UAAP;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YACE,OAAO,EAAE,MAAM;cACbM,cAAc,CAACW,CAAD,CAAd;YACD,CAHH;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF,iBADF;IAcD,CAfA,CAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD;;GA5CQnB,oB;UAMyBD,U;;;KANzBC,oB;AA8CT,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}